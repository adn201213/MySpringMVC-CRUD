package com.adnan.entity;
// Generated Aug 23, 2020, 2:32:21 AM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Questions generated by hbm2java
 */
@Entity
@Table(name = "questions", catalog = "surveys", uniqueConstraints = @UniqueConstraint(columnNames = "question"))
public class Questions implements java.io.Serializable {

	private int id;
	private Survey survey;
	private String question;
	private String comment;
	private Set<Answer> answers = new HashSet<Answer>(0);

	public Questions() {
	}

	public Questions(int id, Survey survey, String question) {
		this.id = id;
		this.survey = survey;
		this.question = question;
	}

	public Questions(int id, Survey survey, String question, String comment, Set<Answer> answers) {
		this.id = id;
		this.survey = survey;
		this.question = question;
		this.comment = comment;
		this.answers = answers;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "survey_id", nullable = false)
	public Survey getSurvey() {
		return this.survey;
	}

	public void setSurvey(Survey survey) {
		this.survey = survey;
	}

	@Column(name = "question", unique = true, nullable = false, length = 45)
	public String getQuestion() {
		return this.question;
	}

	public void setQuestion(String question) {
		this.question = question;
	}

	@Column(name = "comment", length = 45)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questions")
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

}
